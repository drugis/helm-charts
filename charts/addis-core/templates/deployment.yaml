apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "addis-core.fullname" . }}
  labels:
    {{- include "addis-core.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "addis-core.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "addis-core.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "addis-core.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-jena
          image: fabric8/fabric8-dependency-wait-service
          env:
            - name: JENA_URI
              value: {{ .Values.jena.baseUri }}
            - name: DEPENDENCY_POLL_INTERVAL
              value: "10"
            - name: DEPENDENCY_LOG_VERBOSE
              value: "true"
          command: ["/bin/sh"]
          args: ["-c", "fabric8-dependency-wait-service-linux-amd64 $(JENA_URI)"]
        - name: init-nct-import
          image: fabric8/fabric8-dependency-wait-service
          env:
            - name: NCT_IMPORT_URI
              value: {{ .Values.addis.importer }}
            - name: DEPENDENCY_POLL_INTERVAL
              value: "10"
            - name: DEPENDENCY_LOG_VERBOSE
              value: "true"
          command: ["/bin/sh"]
          args: ["-c", "fabric8-dependency-wait-service-linux-amd64 $(NCT_IMPORT_URI)"]
        - name: init-db
          image: fabric8/fabric8-dependency-wait-service
          env:
            - name: POSTGRESQL_URI
              value: postgres://{{ include "call-nested" (list $ "postgresql" "postgresql.fullname") }}:5432
            - name: DEPENDENCY_POLL_INTERVAL
              value: "10"
            - name: DEPENDENCY_LOG_VERBOSE
              value: "true"
          command: ["/bin/sh"]
          args: ["-c", "fabric8-dependency-wait-service-linux-amd64 $(POSTGRESQL_URI)"]
        - name: get-liquibase-changelog
          image: busybox:1.34.1
          command: ['sh', '-c', "mkdir -p /liquibase/changelog && wget -O /liquibase/changelog/database.sql https://raw.githubusercontent.com/drugis/addis-core/{{ .Values.addis.schema.version }}/database.sql"]
          volumeMounts:
            - name: liquibase-changelog
              mountPath: /liquibase/changelog
        - name: update-database-liquibase
          image: liquibase/liquibase:4.6.2
          command: ['sh', '-c', "docker-entrypoint.sh --url=$(LIQUIBASE_COMMAND_URL) --username=$(LIQUIBASE_COMMAND_USERNAME) --password=${LIQUIBASE_COMMAND_PASSWORD} --classpath=/liquibase/changelog/ --changeLogFile=$(LIQUIBASE_COMMAND_CHANGELOG_FILE) update"]
          env:
           - name: LIQUIBASE_COMMAND_URL
             value: jdbc:postgresql://{{ include "call-nested" (list $ "postgresql" "postgresql.fullname") }}:5432/{{ .Values.postgresql.postgresqlDatabase }}?currentSchema=public
           - name: LIQUIBASE_COMMAND_CHANGELOG_FILE
             value: database.sql
           - name: LIQUIBASE_COMMAND_USERNAME
             value: {{ .Values.postgresql.postgresqlUsername }}
           - name: LIQUIBASE_COMMAND_PASSWORD
             value: {{ .Values.postgresql.postgresqlPassword }}
          volumeMounts:
            - name: liquibase-changelog
              mountPath: /liquibase/changelog
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: ADDIS_CORE_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret-{{ include "addis-core.fullname" . }}
                  key: database-password
            - name: PATAVI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: secret-{{ include "addis-core.fullname" . }}
                  key: patavi-api-key
            - name: JENA_API_KEY
              valueFrom:
                secretKeyRef:
                  name: secret-{{ include "addis-core.fullname" . }}
                  key: jena-api-key
            - name: ADDIS_CORE_OAUTH_GOOGLE_SECRET
              valueFrom:
                secretKeyRef:
                  name: secret-{{ include "addis-core.fullname" . }}
                  key: google-secret
            - name: ADDIS_CORE_OAUTH_GOOGLE_KEY
              valueFrom:
                secretKeyRef:
                  name: secret-{{ include "addis-core.fullname" . }}
                  key: google-key
            - name: ADDIS_CORE_DB_CHANGELOG
              value: database.sql
            - name: ADDIS_CORE_DB_DRIVER
              value: org.postgresql.Driver
            - name: ADDIS_CORE_DB
              value: {{ .Values.postgresql.postgresqlDatabase }}
            - name: ADDIS_CORE_DB_HOST
              value: {{ include "call-nested" (list $ "postgresql" "postgresql.fullname") }}
            - name: ADDIS_CORE_DB_USERNAME
              value: {{ .Values.postgresql.postgresqlUsername }}
            - name: CLINICALTRIALS_IMPORTER_URL
              value: {{ .Values.addis.importer }}
            - name: EVENT_SOURCE_URI_PREFIX
              value: {{ .Values.jena.uriPrefix }}
            - name: TRIPLESTORE_BASE_URI
              value: {{ .Values.jena.baseUri }}
            - name: PATAVI_URI
              value: {{ .Values.patavi.host }}
            - name: SECURE_TRAFFIC
              value: "{{ .Values.addis.secure }}"
            - name: JAVA_OPTS
              value: "-DtomcatProxyScheme=https 
                -DtomcatProxyName={{ .Values.addis.host }} 
                -DtomcatProxyPort=443
                -DADDIS_CORE_DB_DRIVER=org.postgresql.Driver 
                -DADDIS_CORE_DB_HOST={{ include "call-nested" (list $ "postgresql" "postgresql.fullname") }} 
                -DADDIS_CORE_DB={{ .Values.postgresql.postgresqlDatabase }}
                -DADDIS_CORE_DB_USERNAME={{ .Values.postgresql.postgresqlUsername }}
                -DADDIS_CORE_DB_PASSWORD={{ .Values.postgresql.postgresqlPassword }}"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: liquibase-changelog
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
