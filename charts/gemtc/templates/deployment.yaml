apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gemtc.fullname" . }}
  labels:
    {{- include "gemtc.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "gemtc.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "gemtc.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gemtc.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-db
          image: fabric8/fabric8-dependency-wait-service
          env:
            - name: POSTGRESQL_URI
              value: postgres://{{ include "call-nested" (list $ "postgresql" "postgresql.fullname") }}:5432
            - name: DEPENDENCY_POLL_INTERVAL
              value: "10"
            - name: DEPENDENCY_LOG_VERBOSE
              value: "true"
          command: ["/bin/sh"]
          args: ["-c", "fabric8-dependency-wait-service-linux-amd64 $(POSTGRESQL_URI)"]
      {{- if .Values.gemtc.enterprise.enabled }}
        - name: update-database-liquibase
          image: registry.drugis.org/liquibase-gemtc:latest
          env:
            - name: LIQUIBASE_URL
              value: 'jdbc:postgresql://{{ include "call-nested" (list $ "postgresql" "postgresql.fullname") }}:5432/{{ .Values.postgresql.postgresqlDatabase}}'
            - name: LIQUIBASE_USERNAME
              value: '{{ .Values.postgresql.postgresqlUsername }}'
            - name: LIQUIBASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "call-nested" (list $ "postgresql" "postgresql.fullname") }}
                  key: postgresql-password
          args:
            - 'update'
        - name: hash-enterprise-user
          image: node:latest
          command: ['sh', '-c']
          env:
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret-{{ template "gemtc.fullname" . }}
                  key: admin-password
          args:
            - npm install -g bcrypt-cli && echo HASHED_ADMIN_PASSWORD=$(npx bcrypt-cli ${ADMIN_PASSWORD} 10) > /tmp/admin_password
          volumeMounts:
            - name: gemtc-enterprise-init
              mountPath: /tmp
        - name: create-enterprise-user
          image: postgres:11
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "call-nested" (list $ "postgresql" "postgresql.fullname") }}
                  key: postgresql-password
          command: ['sh', '-c']
          args:
            - source /tmp/admin_password && PGPASSWORD=${POSTGRES_PASSWORD} psql -h {{ include "call-nested" (list $ "postgresql" "postgresql.fullname") }} -U {{ .Values.postgresql.postgresqlDatabase }} -a -f /tmp/create_user.sql
          volumeMounts:
            - name: gemtc-enterprise-init
              mountPath: /tmp
      {{- else }}
        - name: get-liquibase-changelog
          image: busybox:1.34.1
          command: ['sh', '-c', "mkdir -p /liquibase/changelog && wget -O /liquibase/changelog/liquibase-changelog.sql https://raw.githubusercontent.com/drugis/gemtc-web/{{ .Values.gemtc.schema.version }}/liquibase/liquibase-changelog.sql"]
          volumeMounts:
            - name: liquibase-changelog
              mountPath: /liquibase/changelog
        - name: update-database-liquibase
          image: liquibase/liquibase:4.6.2
          command: ['sh', '-c', "docker-entrypoint.sh --url=$(LIQUIBASE_COMMAND_URL) --username=$(LIQUIBASE_COMMAND_USERNAME) --password=${LIQUIBASE_COMMAND_PASSWORD} --classpath=/liquibase/changelog/ --changeLogFile=$(LIQUIBASE_COMMAND_CHANGELOG_FILE) update"]
          env:
            - name: LIQUIBASE_COMMAND_URL
              value: jdbc:postgresql://{{ include "call-nested" (list $ "postgresql" "postgresql.fullname") }}:5432/{{ .Values.postgresql.postgresqlDatabase }}?currentSchema=public
            - name: LIQUIBASE_COMMAND_CHANGELOG_FILE
              value: liquibase-changelog.sql
            - name: LIQUIBASE_COMMAND_USERNAME
              value: {{ .Values.postgresql.postgresqlUsername }}
            - name: LIQUIBASE_COMMAND_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "call-nested" (list $ "postgresql" "postgresql.fullname") }}
                  key: postgresql-password
          volumeMounts:
            - name: liquibase-changelog
              mountPath: /liquibase/changelog
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: GEMTC_DB_USERNAME
              value: {{ .Values.postgresql.postgresqlUsername }}
            - name: GEMTC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret-{{ include "gemtc.fullname" . }}
                  key: database-password
            - name: DB_HOST
              value: {{ include "call-nested" (list $ "postgresql" "postgresql.fullname") }}
            - name: GEMTC_DB
              value: {{ .Values.postgresql.postgresqlDatabase }}
            - name: GEMTC_GOOGLE_KEY
              valueFrom:
                secretKeyRef:
                  name: secret-{{ include "gemtc.fullname" . }}
                  key: google-key
            - name: GEMTC_GOOGLE_SECRET
              valueFrom:
                secretKeyRef:
                  name: secret-{{ include "gemtc.fullname" . }}
                  key: google-secret
            - name: GEMTC_COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: secret-{{ include "gemtc.fullname" . }}
                  key: cookie-secret
            - name: GEMTC_HOST
              value: {{ .Values.gemtc.host }}
            - name: PATAVI_HOST
              value: {{ .Values.patavi.host }}
            - name: PATAVI_PORT
              value: "{{ .Values.patavi.port }}"
            - name: PATAVI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: secret-{{ include "gemtc.fullname" . }}
                  key: api-key
            - name: SECURE_TRAFFIC
              value: "{{ .Values.gemtc.secure }}"
            - name: GEMTC_AUTHENTICATION_METHOD
              value: {{ .Values.gemtc.authenticationMethod }}
          ports:
            - name: http
              containerPort: 3001
          livenessProbe:
            tcpSocket:
              port: 3001
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 3001
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: liquibase-changelog
          emptyDir: {}
        {{- if .Values.gemtc.enterprise.enabled }}
        - name: gemtc-enterprise-init
          secret:
            secretName: secret-enterprise-init-{{ include "gemtc.fullname" . }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
